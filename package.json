{
  "name": "wtv",
  "version": "0.0.1",
  "description": "Whatever...  ¯\\_(ツ)_/¯",
  "main": "./dist/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/icylace/wtv.git"
  },
  "author": "Ron Martinez <ramartin.net@gmail.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/icylace/wtv/issues"
  },
  "homepage": "https://github.com/icylace/wtv#readme",
  "dependencies": {
    "hyperapp": "^2.0.4",
    "shades": "^2.1.0"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^2.29.0",
    "@typescript-eslint/parser": "^2.29.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-config-standard": "^14.1.1",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-json": "^2.1.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "prettier": "^2.0.5",
    "rollup": "^2.6.1",
    "snowpack": "^1.7.0",
    "terser": "^4.6.11",
    "typescript": "^3.8.3",
    "utility-types": "^3.10.0"
  },
  "scripts": {
    "build:dev": "npm run clean && npm run output:typescript:refresh && npm run bundle:dev",
    "build:dev:update": "npm run output:typescript:update && npm run bundle:dev",
    "build:prod": "npm run clean && npm run output:typescript:full && npm run bundle:prod",

    "bundle:dev": "npm run output:rollup:dev && npm run output:babel && npm run dist:dev",
    "bundle:prod": "npm run output:rollup:prod && npm run output:babel && npm run min && npm run dist:prod",

    "check": "npm check:lint && npm check:types",
    "check:lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "check:types": "tsc --noEmit --incremental false",

    "clean": "npm run clean:dist && npm run clean:output",
    "clean:dist": "rm -fr ./dist && mkdir ./dist",
    "clean:output": "rm -fr ./output && mkdir ./output",

    "dist:dev": "npm run dist:babel",
    "dist:prod": "npm run dist:babel && npm run dist:typescript:types && npm run dist:terser && npm run dist:gzip",
    "dist:babel": "cp ./output/babel/* ./dist",
    "dist:gzip": "[ -d ./output/gzip ] && cp ./output/gzip/* ./dist ;:",
    "dist:terser": "[ -d ./output/terser ] && cp ./output/terser/* ./dist ;:",
    "dist:typescript:types": "[ -f ./output/typescript/index.d.ts ] && cp ./output/typescript/index.d.ts ./dist ;:",

    "min": "npm run min:esm && npm run min:umd",
    "min:esm": "npm run output:terser:esm && npm run output:gzip:esm",
    "min:umd": "npm run output:terser:umd && npm run output:gzip:umd",

    "output:babel": "babel ./output/rollup --out-dir ./output/babel",

    "output:gzip:esm": "[ ! -d ./output/gzip ] && mkdir ./output/gzip ; gzip --best --to-stdout ./output/terser/index.min.js > ./output/gzip/index.min.js.gz",
    "output:gzip:umd": "[ ! -d ./output/gzip ] && mkdir ./output/gzip ; gzip --best --to-stdout ./output/terser/index.umd.min.js > ./output/gzip/index.umd.min.js.gz",

    "output:rollup:dev": "rollup --config rollup.config.dev.js",
    "output:rollup:prod": "rollup --config rollup.config.prod.js",

    "output:terser:esm": "[ ! -d ./output/terser ] && mkdir ./output/terser ; terser --ecma 6 --compress --mangle --module --output ./output/terser/index.min.js -- ./output/rollup/index.js",
    "output:terser:umd": "[ ! -d ./output/terser ] && mkdir ./output/terser ; terser --ecma 6 --compress --mangle --output ./output/terser/index.umd.min.js -- ./output/rollup/index.umd.js",

    "output:typescript:full": "npm run output:typescript:refresh && npm run output:typescript:types",
    "output:typescript:refresh": "tsc --build --incremental false",
    "output:typescript:types": "tsc --declaration --emitDeclarationOnly --incremental false --module amd --outFile ./output/typescript/index.js",
    "output:typescript:update": "tsc --build",

    "prepare": "snowpack",

    "watch:typescript": "tsc --watch",
    "watch:rollup": "rollup --config --watch"
  }
}
