import { describe, expect, test } from "vitest"

import { clamp, inside, normalize, random, wrap } from "../lib/range.ts"

// -----------------------------------------------------------------------------

describe("`clamp()`", () => {
  test("00", () => expect(clamp(0, 0, -10)).toBe(0))
  test("01", () => expect(clamp(0, 0, -1)).toBe(0))
  test("02", () => expect(clamp(0, 0, 0)).toBe(0))
  test("03", () => expect(clamp(0, 0, 1)).toBe(0))
  test("04", () => expect(clamp(0, 0, 10)).toBe(0))

  test("05", () => expect(clamp(1, 1, -10)).toBe(1))
  test("06", () => expect(clamp(1, 1, -1)).toBe(1))
  test("07", () => expect(clamp(1, 1, 0)).toBe(1))
  test("08", () => expect(clamp(1, 1, 1)).toBe(1))
  test("09", () => expect(clamp(1, 1, 10)).toBe(1))

  test("10", () => expect(clamp(-1, -1, -10)).toBe(-1))
  test("11", () => expect(clamp(-1, -1, -1)).toBe(-1))
  test("12", () => expect(clamp(-1, -1, 0)).toBe(-1))
  test("13", () => expect(clamp(-1, -1, 1)).toBe(-1))
  test("14", () => expect(clamp(-1, -1, 10)).toBe(-1))

  test("15", () => expect(clamp(2, 6, -100)).toBe(2))
  test("16", () => expect(clamp(2, 6, -4)).toBe(2))
  test("17", () => expect(clamp(2, 6, -3)).toBe(2))
  test("18", () => expect(clamp(2, 6, -2)).toBe(2))
  test("16", () => expect(clamp(2, 6, -1)).toBe(2))
  test("17", () => expect(clamp(2, 6, 0)).toBe(2))
  test("18", () => expect(clamp(2, 6, 1)).toBe(2))
  test("19", () => expect(clamp(2, 6, 2)).toBe(2))
  test("20", () => expect(clamp(2, 6, 3)).toBe(3))
  test("21", () => expect(clamp(2, 6, 4)).toBe(4))
  test("22", () => expect(clamp(2, 6, 5)).toBe(5))
  test("23", () => expect(clamp(2, 6, 6)).toBe(6))
  test("24", () => expect(clamp(2, 6, 7)).toBe(6))
  test("25", () => expect(clamp(2, 6, 8)).toBe(6))
  test("26", () => expect(clamp(2, 6, 9)).toBe(6))
  test("27", () => expect(clamp(2, 6, 100)).toBe(6))

  test("28", () => expect(clamp(-4, 3, -100)).toBe(-4))
  test("29", () => expect(clamp(-4, 3, -5)).toBe(-4))
  test("30", () => expect(clamp(-4, 3, -4)).toBe(-4))
  test("31", () => expect(clamp(-4, 3, -3)).toBe(-3))
  test("32", () => expect(clamp(-4, 3, -2)).toBe(-2))
  test("33", () => expect(clamp(-4, 3, -1)).toBe(-1))
  test("34", () => expect(clamp(-4, 3, 0)).toBe(0))
  test("35", () => expect(clamp(-4, 3, 1)).toBe(1))
  test("36", () => expect(clamp(-4, 3, 2)).toBe(2))
  test("37", () => expect(clamp(-4, 3, 3)).toBe(3))
  test("38", () => expect(clamp(-4, 3, 4)).toBe(3))
  test("39", () => expect(clamp(-4, 3, 5)).toBe(3))
  test("40", () => expect(clamp(-4, 3, 6)).toBe(3))
  test("41", () => expect(clamp(-4, 3, 100)).toBe(3))

  test("42", () => expect(clamp(-4, -1, -100)).toBe(-4))
  test("43", () => expect(clamp(-4, -1, -5)).toBe(-4))
  test("44", () => expect(clamp(-4, -1, -4)).toBe(-4))
  test("45", () => expect(clamp(-4, -1, -3)).toBe(-3))
  test("46", () => expect(clamp(-4, -1, -2)).toBe(-2))
  test("47", () => expect(clamp(-4, -1, -1)).toBe(-1))
  test("48", () => expect(clamp(-4, -1, 0)).toBe(-1))
  test("49", () => expect(clamp(-4, -1, 1)).toBe(-1))
  test("50", () => expect(clamp(-4, -1, 2)).toBe(-1))
  test("51", () => expect(clamp(-4, -1, 3)).toBe(-1))
  test("52", () => expect(clamp(-4, -1, 4)).toBe(-1))
  test("53", () => expect(clamp(-4, -1, 5)).toBe(-1))
  test("54", () => expect(clamp(-4, -1, 100)).toBe(-1))
})

describe("`inside()`", () => {
  test("00", () => expect(inside(0, 0, -10)).toBe(null))
  test("01", () => expect(inside(0, 0, -1)).toBe(null))
  test("02", () => expect(inside(0, 0, 0)).toBe(0))
  test("03", () => expect(inside(0, 0, 1)).toBe(null))
  test("04", () => expect(inside(0, 0, 10)).toBe(null))

  test("05", () => expect(inside(1, 1, -10)).toBe(null))
  test("06", () => expect(inside(1, 1, -1)).toBe(null))
  test("07", () => expect(inside(1, 1, 0)).toBe(null))
  test("08", () => expect(inside(1, 1, 1)).toBe(1))
  test("09", () => expect(inside(1, 1, 10)).toBe(null))

  test("10", () => expect(inside(-1, -1, -10)).toBe(null))
  test("11", () => expect(inside(-1, -1, -1)).toBe(-1))
  test("12", () => expect(inside(-1, -1, 0)).toBe(null))
  test("13", () => expect(inside(-1, -1, 1)).toBe(null))
  test("14", () => expect(inside(-1, -1, 10)).toBe(null))

  test("15", () => expect(inside(2, 6, -100)).toBe(null))
  test("16", () => expect(inside(2, 6, -4)).toBe(null))
  test("17", () => expect(inside(2, 6, -3)).toBe(null))
  test("18", () => expect(inside(2, 6, -2)).toBe(null))
  test("16", () => expect(inside(2, 6, -1)).toBe(null))
  test("17", () => expect(inside(2, 6, 0)).toBe(null))
  test("18", () => expect(inside(2, 6, 1)).toBe(null))
  test("19", () => expect(inside(2, 6, 2)).toBe(2))
  test("20", () => expect(inside(2, 6, 3)).toBe(3))
  test("21", () => expect(inside(2, 6, 4)).toBe(4))
  test("22", () => expect(inside(2, 6, 5)).toBe(5))
  test("23", () => expect(inside(2, 6, 6)).toBe(6))
  test("24", () => expect(inside(2, 6, 7)).toBe(null))
  test("25", () => expect(inside(2, 6, 8)).toBe(null))
  test("26", () => expect(inside(2, 6, 9)).toBe(null))
  test("27", () => expect(inside(2, 6, 100)).toBe(null))

  test("28", () => expect(inside(-4, 3, -100)).toBe(null))
  test("29", () => expect(inside(-4, 3, -5)).toBe(null))
  test("30", () => expect(inside(-4, 3, -4)).toBe(-4))
  test("31", () => expect(inside(-4, 3, -3)).toBe(-3))
  test("32", () => expect(inside(-4, 3, -2)).toBe(-2))
  test("33", () => expect(inside(-4, 3, -1)).toBe(-1))
  test("34", () => expect(inside(-4, 3, 0)).toBe(0))
  test("35", () => expect(inside(-4, 3, 1)).toBe(1))
  test("36", () => expect(inside(-4, 3, 2)).toBe(2))
  test("37", () => expect(inside(-4, 3, 3)).toBe(3))
  test("38", () => expect(inside(-4, 3, 4)).toBe(null))
  test("39", () => expect(inside(-4, 3, 5)).toBe(null))
  test("40", () => expect(inside(-4, 3, 6)).toBe(null))
  test("41", () => expect(inside(-4, 3, 100)).toBe(null))

  test("42", () => expect(inside(-4, -1, -100)).toBe(null))
  test("43", () => expect(inside(-4, -1, -5)).toBe(null))
  test("44", () => expect(inside(-4, -1, -4)).toBe(-4))
  test("45", () => expect(inside(-4, -1, -3)).toBe(-3))
  test("46", () => expect(inside(-4, -1, -2)).toBe(-2))
  test("47", () => expect(inside(-4, -1, -1)).toBe(-1))
  test("48", () => expect(inside(-4, -1, 0)).toBe(null))
  test("49", () => expect(inside(-4, -1, 1)).toBe(null))
  test("50", () => expect(inside(-4, -1, 2)).toBe(null))
  test("51", () => expect(inside(-4, -1, 3)).toBe(null))
  test("52", () => expect(inside(-4, -1, 4)).toBe(null))
  test("53", () => expect(inside(-4, -1, 5)).toBe(null))
  test("54", () => expect(inside(-4, -1, 100)).toBe(null))
})

describe("`normalize()`", () => {
  test("00", () => expect(normalize(0, 0, -10)).toBe(1.0))
  test("01", () => expect(normalize(0, 0, -1)).toBe(1.0))
  test("02", () => expect(normalize(0, 0, 0)).toBe(1.0))
  test("03", () => expect(normalize(0, 0, 1)).toBe(1.0))
  test("04", () => expect(normalize(0, 0, 10)).toBe(1.0))

  test("05", () => expect(normalize(1, 1, -10)).toBe(1.0))
  test("06", () => expect(normalize(1, 1, -1)).toBe(1.0))
  test("07", () => expect(normalize(1, 1, 0)).toBe(1.0))
  test("08", () => expect(normalize(1, 1, 1)).toBe(1.0))
  test("09", () => expect(normalize(1, 1, 10)).toBe(1.0))

  test("10", () => expect(normalize(-1, -1, -10)).toBe(1.0))
  test("11", () => expect(normalize(-1, -1, -1)).toBe(1.0))
  test("12", () => expect(normalize(-1, -1, 0)).toBe(1.0))
  test("13", () => expect(normalize(-1, -1, 1)).toBe(1.0))
  test("14", () => expect(normalize(-1, -1, 10)).toBe(1.0))

  test("15", () => expect(normalize(2, 6, -100)).toBe(-25.5))
  test("16", () => expect(normalize(2, 6, -4)).toBe(-1.5))
  test("17", () => expect(normalize(2, 6, -3)).toBe(-1.25))
  test("18", () => expect(normalize(2, 6, -2)).toBe(-1.0))
  test("16", () => expect(normalize(2, 6, -1)).toBe(-0.75))
  test("17", () => expect(normalize(2, 6, 0)).toBe(-0.5))
  test("18", () => expect(normalize(2, 6, 1)).toBe(-0.25))
  test("19", () => expect(normalize(2, 6, 2)).toBe(0.0))
  test("20", () => expect(normalize(2, 6, 3)).toBe(0.25))
  test("21", () => expect(normalize(2, 6, 4)).toBe(0.5))
  test("22", () => expect(normalize(2, 6, 5)).toBe(0.75))
  test("23", () => expect(normalize(2, 6, 6)).toBe(1.0))
  test("24", () => expect(normalize(2, 6, 7)).toBe(1.25))
  test("25", () => expect(normalize(2, 6, 8)).toBe(1.5))
  test("26", () => expect(normalize(2, 6, 9)).toBe(1.75))
  test("27", () => expect(normalize(2, 6, 100)).toBe(24.5))

  test("28", () => expect(normalize(-4, 3, -100)).toBe(-13.714285714285714))
  test("29", () => expect(normalize(-4, 3, -5)).toBe(-0.14285714285714285))
  test("30", () => expect(normalize(-4, 3, -4)).toBe(0.0))
  test("31", () => expect(normalize(-4, 3, -3)).toBe(0.14285714285714285))
  test("32", () => expect(normalize(-4, 3, -2)).toBe(0.2857142857142857))
  test("33", () => expect(normalize(-4, 3, -1)).toBe(0.42857142857142855))
  test("34", () => expect(normalize(-4, 3, 0)).toBe(0.5714285714285714))
  test("35", () => expect(normalize(-4, 3, 1)).toBe(0.7142857142857143))
  test("36", () => expect(normalize(-4, 3, 2)).toBe(0.8571428571428571))
  test("37", () => expect(normalize(-4, 3, 3)).toBe(1.0))
  test("38", () => expect(normalize(-4, 3, 4)).toBe(1.14285714285714285))
  test("39", () => expect(normalize(-4, 3, 5)).toBe(1.2857142857142857))
  test("40", () => expect(normalize(-4, 3, 6)).toBe(1.42857142857142855))
  test("41", () => expect(normalize(-4, 3, 100)).toBe(14.857142857142858))

  test("42", () => expect(normalize(-4, -1, -100)).toBe(-32))
  test("43", () => expect(normalize(-4, -1, -5)).toBe(-0.3333333333333333))
  test("44", () => expect(normalize(-4, -1, -4)).toBe(0.0))
  test("45", () => expect(normalize(-4, -1, -3)).toBe(0.3333333333333333))
  test("46", () => expect(normalize(-4, -1, -2)).toBe(0.6666666666666666))
  test("47", () => expect(normalize(-4, -1, -1)).toBe(1.0))
  test("48", () => expect(normalize(-4, -1, 0)).toBe(1.3333333333333333))
  test("49", () => expect(normalize(-4, -1, 1)).toBe(1.6666666666666667))
  test("50", () => expect(normalize(-4, -1, 2)).toBe(2.0))
  test("51", () => expect(normalize(-4, -1, 3)).toBe(2.3333333333333333))
  test("52", () => expect(normalize(-4, -1, 4)).toBe(2.6666666666666666))
  test("53", () => expect(normalize(-4, -1, 5)).toBe(3.0))
  test("54", () => expect(normalize(-4, -1, 100)).toBe(34.666666666666664))
})

describe("`random()`", () => {
  test("00", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(0, 0)).toBe(0)
    }
  })

  test("01", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(1, 1)).toBe(1)
    }
  })

  test("02", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(-1, -1)).toBe(-1)
    }
  })

  test("03", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(2, 6)).toBeGreaterThanOrEqual(2)
      expect(random(2, 6)).toBeLessThanOrEqual(6)
    }
  })

  test("04", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(-4, 3)).toBeGreaterThanOrEqual(-4)
      expect(random(-4, 3)).toBeLessThanOrEqual(3)
    }
  })

  test("05", () => {
    for (let i = 0; i < 100; ++i) {
      expect(random(-4, -1)).toBeGreaterThanOrEqual(-4)
      expect(random(-4, -1)).toBeLessThanOrEqual(-1)
    }
  })
})

describe("`wrap()`", () => {
  test("00", () => expect(wrap(0, 0, -10)).toBe(0))
  test("01", () => expect(wrap(0, 0, -1)).toBe(0))
  test("02", () => expect(wrap(0, 0, 0)).toBe(0))
  test("03", () => expect(wrap(0, 0, 1)).toBe(0))
  test("04", () => expect(wrap(0, 0, 10)).toBe(0))

  test("05", () => expect(wrap(1, 1, -10)).toBe(1))
  test("06", () => expect(wrap(1, 1, -1)).toBe(1))
  test("07", () => expect(wrap(1, 1, 0)).toBe(1))
  test("08", () => expect(wrap(1, 1, 1)).toBe(1))
  test("09", () => expect(wrap(1, 1, 10)).toBe(1))

  test("10", () => expect(wrap(-1, -1, -10)).toBe(-1))
  test("11", () => expect(wrap(-1, -1, -1)).toBe(-1))
  test("12", () => expect(wrap(-1, -1, 0)).toBe(-1))
  test("13", () => expect(wrap(-1, -1, 1)).toBe(-1))
  test("14", () => expect(wrap(-1, -1, 10)).toBe(-1))

  test("15", () => expect(wrap(2, 6, -100)).toBe(5))
  test("16", () => expect(wrap(2, 6, -4)).toBe(6))
  test("17", () => expect(wrap(2, 6, -3)).toBe(2))
  test("18", () => expect(wrap(2, 6, -2)).toBe(3))
  test("19", () => expect(wrap(2, 6, -1)).toBe(4))
  test("20", () => expect(wrap(2, 6, 0)).toBe(5))
  test("21", () => expect(wrap(2, 6, 1)).toBe(6))
  test("22", () => expect(wrap(2, 6, 2)).toBe(2))
  test("23", () => expect(wrap(2, 6, 3)).toBe(3))
  test("24", () => expect(wrap(2, 6, 4)).toBe(4))
  test("25", () => expect(wrap(2, 6, 5)).toBe(5))
  test("26", () => expect(wrap(2, 6, 6)).toBe(6))
  test("27", () => expect(wrap(2, 6, 7)).toBe(2))
  test("28", () => expect(wrap(2, 6, 8)).toBe(3))
  test("29", () => expect(wrap(2, 6, 9)).toBe(4))
  test("30", () => expect(wrap(2, 6, 100)).toBe(5))

  test("31", () => expect(wrap(-4, 3, -100)).toBe(-4))
  test("32", () => expect(wrap(-4, 3, -5)).toBe(3))
  test("33", () => expect(wrap(-4, 3, -4)).toBe(-4))
  test("34", () => expect(wrap(-4, 3, -3)).toBe(-3))
  test("35", () => expect(wrap(-4, 3, -2)).toBe(-2))
  test("36", () => expect(wrap(-4, 3, -1)).toBe(-1))
  test("37", () => expect(wrap(-4, 3, 0)).toBe(0))
  test("38", () => expect(wrap(-4, 3, 1)).toBe(1))
  test("39", () => expect(wrap(-4, 3, 2)).toBe(2))
  test("40", () => expect(wrap(-4, 3, 3)).toBe(3))
  test("41", () => expect(wrap(-4, 3, 4)).toBe(-4))
  test("42", () => expect(wrap(-4, 3, 5)).toBe(-3))
  test("43", () => expect(wrap(-4, 3, 6)).toBe(-2))
  test("44", () => expect(wrap(-4, 3, 100)).toBe(-4))

  test("45", () => expect(wrap(-4, -1, -100)).toBe(-4))
  test("46", () => expect(wrap(-4, -1, -5)).toBe(-1))
  test("47", () => expect(wrap(-4, -1, -4)).toBe(-4))
  test("48", () => expect(wrap(-4, -1, -3)).toBe(-3))
  test("49", () => expect(wrap(-4, -1, -2)).toBe(-2))
  test("50", () => expect(wrap(-4, -1, -1)).toBe(-1))
  test("51", () => expect(wrap(-4, -1, 0)).toBe(-4))
  test("52", () => expect(wrap(-4, -1, 1)).toBe(-3))
  test("53", () => expect(wrap(-4, -1, 2)).toBe(-2))
  test("54", () => expect(wrap(-4, -1, 3)).toBe(-1))
  test("55", () => expect(wrap(-4, -1, 4)).toBe(-4))
  test("56", () => expect(wrap(-4, -1, 5)).toBe(-3))
  test("57", () => expect(wrap(-4, -1, 100)).toBe(-4))
})
